{"version":3,"sources":["logo.svg","Components/country.js","Components/Register.js","App.js","reportWebVitals.js","index.js"],"names":["countryNames","name","Register","useState","email","password","retype_password","Firstname","LastName","phonenumber","Address","Town","Region","ZipCode","country","userInput","setUserInput","localStorage","getItem","JSON","parse","records","setRecords","handleInputChange","e","target","value","console","log","columns","dataField","text","sort","filter","textFilter","useEffect","setItem","stringify","pagination","paginationFactory","page","sizePerPage","lastPageText","firstPageText","nextPageText","prePageText","showTotal","alwaysShowAllBtns","onPageChange","onSizePerPageChange","className","onSubmit","preventDefault","newRecord","id","Date","getTime","toString","action","type","required","onChange","map","user","bootstrap4","keyField","data","filterFactory","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.354cf44c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\n export const countryNames=[ \r\n    {name: \"Afghanistan\", \"code\": \"AF\"}, \r\n    {name: \"land Islands\", \"code\": \"AX\"}, \r\n    {name: \"Albania\", \"code\": \"AL\"}, \r\n    {name: \"Algeria\", \"code\": \"DZ\"}, \r\n    {name: \"American Samoa\", \"code\": \"AS\"}, \r\n    {name: \"AndorrA\", \"code\": \"AD\"}, \r\n    {name: \"Angola\", \"code\": \"AO\"}, \r\n    {name: \"Anguilla\", \"code\": \"AI\"}, \r\n    {name: \"Antarctica\", \"code\": \"AQ\"}, \r\n    {name: \"Antigua and Barbuda\", \"code\": \"AG\"}, \r\n    {name: \"Argentina\", \"code\": \"AR\"}, \r\n    {name: \"Armenia\", \"code\": \"AM\"}, \r\n    {name: \"Aruba\", \"code\": \"AW\"}, \r\n    {name: \"Australia\", \"code\": \"AU\"}, \r\n    {name: \"Austria\", \"code\": \"AT\"}, \r\n    {name: \"Azerbaijan\", \"code\": \"AZ\"}, \r\n    {name: \"Bahamas\", \"code\": \"BS\"}, \r\n    {name: \"Bahrain\", \"code\": \"BH\"}, \r\n    {name: \"Bangladesh\", \"code\": \"BD\"}, \r\n    {name: \"Barbados\", \"code\": \"BB\"}, \r\n    {name: \"Belarus\", \"code\": \"BY\"}, \r\n    {name: \"Belgium\", \"code\": \"BE\"}, \r\n    {name: \"Belize\", \"code\": \"BZ\"}, \r\n    {name: \"Benin\", \"code\": \"BJ\"}, \r\n    {name: \"Bermuda\", \"code\": \"BM\"}, \r\n    {name: \"Bhutan\", \"code\": \"BT\"}, \r\n    {name: \"Bolivia\", \"code\": \"BO\"}, \r\n    {name: \"Bosnia and Herzegovina\", \"code\": \"BA\"}, \r\n    {name: \"Botswana\", \"code\": \"BW\"}, \r\n    {name: \"Bouvet Island\", \"code\": \"BV\"}, \r\n    {name: \"Brazil\", \"code\": \"BR\"}, \r\n    {name: \"British Indian Ocean Territory\", \"code\": \"IO\"}, \r\n    {name: \"Brunei Darussalam\", \"code\": \"BN\"}, \r\n    {name: \"Bulgaria\", \"code\": \"BG\"}, \r\n    {name: \"Burkina Faso\", \"code\": \"BF\"}, \r\n    {name: \"Burundi\", \"code\": \"BI\"}, \r\n    {name: \"Cambodia\", \"code\": \"KH\"}, \r\n    {name: \"Cameroon\", \"code\": \"CM\"}, \r\n    {name: \"Canada\", \"code\": \"CA\"}, \r\n    {name: \"Cape Verde\", \"code\": \"CV\"}, \r\n    {name: \"Cayman Islands\", \"code\": \"KY\"}, \r\n    {name: \"Central African Republic\", \"code\": \"CF\"}, \r\n    {name: \"Chad\", \"code\": \"TD\"}, \r\n    {name: \"Chile\", \"code\": \"CL\"}, \r\n    {name: \"China\", \"code\": \"CN\"}, \r\n    {name: \"Christmas Island\", \"code\": \"CX\"}, \r\n    {name: \"Cocos (Keeling) Islands\", \"code\": \"CC\"}, \r\n    {name: \"Colombia\", \"code\": \"CO\"}, \r\n    {name: \"Comoros\", \"code\": \"KM\"}, \r\n    {name: \"Congo\", \"code\": \"CG\"}, \r\n    {name: \"Congo, The Democratic Republic of the\", \"code\": \"CD\"}, \r\n    {name: \"Cook Islands\", \"code\": \"CK\"}, \r\n    {name: \"Costa Rica\", \"code\": \"CR\"}, \r\n    {name: \"Cote D\\\"Ivoire\", \"code\": \"CI\"}, \r\n    {name: \"Croatia\", \"code\": \"HR\"}, \r\n    {name: \"Cuba\", \"code\": \"CU\"}, \r\n    {name: \"Cyprus\", \"code\": \"CY\"}, \r\n    {name: \"Czech Republic\", \"code\": \"CZ\"}, \r\n    {name: \"Denmark\", \"code\": \"DK\"}, \r\n    {name: \"Djibouti\", \"code\": \"DJ\"}, \r\n    {name: \"Dominica\", \"code\": \"DM\"}, \r\n    {name: \"Dominican Republic\", \"code\": \"DO\"}, \r\n    {name: \"Ecuador\", \"code\": \"EC\"}, \r\n    {name: \"Egypt\", \"code\": \"EG\"}, \r\n    {name: \"El Salvador\", \"code\": \"SV\"}, \r\n    {name: \"Equatorial Guinea\", \"code\": \"GQ\"}, \r\n    {name: \"Eritrea\", \"code\": \"ER\"}, \r\n    {name: \"Estonia\", \"code\": \"EE\"}, \r\n    {name: \"Ethiopia\", \"code\": \"ET\"}, \r\n    {name: \"Falkland Islands (Malvinas)\", \"code\": \"FK\"}, \r\n    {name: \"Faroe Islands\", \"code\": \"FO\"}, \r\n    {name: \"Fiji\", \"code\": \"FJ\"}, \r\n    {name: \"Finland\", \"code\": \"FI\"}, \r\n    {name: \"France\", \"code\": \"FR\"}, \r\n    {name: \"French Guiana\", \"code\": \"GF\"}, \r\n    {name: \"French Polynesia\", \"code\": \"PF\"}, \r\n    {name: \"French Southern Territories\", \"code\": \"TF\"}, \r\n    {name: \"Gabon\", \"code\": \"GA\"}, \r\n    {name: \"Gambia\", \"code\": \"GM\"}, \r\n    {name: \"Georgia\", \"code\": \"GE\"}, \r\n    {name: \"Germany\", \"code\": \"DE\"}, \r\n    {name: \"Ghana\", \"code\": \"GH\"}, \r\n    {name: \"Gibraltar\", \"code\": \"GI\"}, \r\n    {name: \"Greece\", \"code\": \"GR\"}, \r\n    {name: \"Greenland\", \"code\": \"GL\"}, \r\n    {name: \"Grenada\", \"code\": \"GD\"}, \r\n    {name: \"Guadeloupe\", \"code\": \"GP\"}, \r\n    {name: \"Guam\", \"code\": \"GU\"}, \r\n    {name: \"Guatemala\", \"code\": \"GT\"}, \r\n    {name: \"Guernsey\", \"code\": \"GG\"}, \r\n    {name: \"Guinea\", \"code\": \"GN\"}, \r\n    {name: \"Guinea-Bissau\", \"code\": \"GW\"}, \r\n    {name: \"Guyana\", \"code\": \"GY\"}, \r\n    {name: \"Haiti\", \"code\": \"HT\"}, \r\n    {name: \"Heard Island and Mcdonald Islands\", \"code\": \"HM\"}, \r\n    {name: \"Holy See (Vatican City State)\", \"code\": \"VA\"}, \r\n    {name: \"Honduras\", \"code\": \"HN\"}, \r\n    {name: \"Hong Kong\", \"code\": \"HK\"}, \r\n    {name: \"Hungary\", \"code\": \"HU\"}, \r\n    {name: \"Iceland\", \"code\": \"IS\"}, \r\n    {name: \"India\", \"code\": \"IN\"}, \r\n    {name: \"Indonesia\", \"code\": \"ID\"}, \r\n    {name: \"Iran, Islamic Republic Of\", \"code\": \"IR\"}, \r\n    {name: \"Iraq\", \"code\": \"IQ\"}, \r\n    {name: \"Ireland\", \"code\": \"IE\"}, \r\n    {name: \"Isle of Man\", \"code\": \"IM\"}, \r\n    {name: \"Israel\", \"code\": \"IL\"}, \r\n    {name: \"Italy\", \"code\": \"IT\"}, \r\n    {name: \"Jamaica\", \"code\": \"JM\"}, \r\n    {name: \"Japan\", \"code\": \"JP\"}, \r\n    {name: \"Jersey\", \"code\": \"JE\"}, \r\n    {name: \"Jordan\", \"code\": \"JO\"}, \r\n    {name: \"Kazakhstan\", \"code\": \"KZ\"}, \r\n    {name: \"Kenya\", \"code\": \"KE\"}, \r\n    {name: \"Kiribati\", \"code\": \"KI\"}, \r\n    {name: \"Korea, Democratic People\\\"S Republic of\", \"code\": \"KP\"}, \r\n    {name: \"Korea, Republic of\", \"code\": \"KR\"}, \r\n    {name: \"Kuwait\", \"code\": \"KW\"}, \r\n    {name: \"Kyrgyzstan\", \"code\": \"KG\"}, \r\n    {name: \"Lao People\\\"S Democratic Republic\", \"code\": \"LA\"}, \r\n    {name: \"Latvia\", \"code\": \"LV\"}, \r\n    {name: \"Lebanon\", \"code\": \"LB\"}, \r\n    {name: \"Lesotho\", \"code\": \"LS\"}, \r\n    {name: \"Liberia\", \"code\": \"LR\"}, \r\n    {name: \"Libyan Arab Jamahiriya\", \"code\": \"LY\"}, \r\n    {name: \"Liechtenstein\", \"code\": \"LI\"}, \r\n    {name: \"Lithuania\", \"code\": \"LT\"}, \r\n    {name: \"Luxembourg\", \"code\": \"LU\"}, \r\n    {name: \"Macao\", \"code\": \"MO\"}, \r\n    {name: \"Macedonia, The Former Yugoslav Republic of\", \"code\": \"MK\"}, \r\n    {name: \"Madagascar\", \"code\": \"MG\"}, \r\n    {name: \"Malawi\", \"code\": \"MW\"}, \r\n    {name: \"Malaysia\", \"code\": \"MY\"}, \r\n    {name: \"Maldives\", \"code\": \"MV\"}, \r\n    {name: \"Mali\", \"code\": \"ML\"}, \r\n    {name: \"Malta\", \"code\": \"MT\"}, \r\n    {name: \"Marshall Islands\", \"code\": \"MH\"}, \r\n    {name: \"Martinique\", \"code\": \"MQ\"}, \r\n    {name: \"Mauritania\", \"code\": \"MR\"}, \r\n    {name: \"Mauritius\", \"code\": \"MU\"}, \r\n    {name: \"Mayotte\", \"code\": \"YT\"}, \r\n    {name: \"Mexico\", \"code\": \"MX\"}, \r\n    {name: \"Micronesia, Federated States of\", \"code\": \"FM\"}, \r\n    {name: \"Moldova, Republic of\", \"code\": \"MD\"}, \r\n    {name: \"Monaco\", \"code\": \"MC\"}, \r\n    {name: \"Mongolia\", \"code\": \"MN\"}, \r\n    {name: \"Montenegro\", \"code\": \"ME\"},\r\n    {name: \"Montserrat\", \"code\": \"MS\"},\r\n    {name: \"Morocco\", \"code\": \"MA\"}, \r\n    {name: \"Mozambique\", \"code\": \"MZ\"}, \r\n    {name: \"Myanmar\", \"code\": \"MM\"}, \r\n    {name: \"Namibia\", \"code\": \"NA\"}, \r\n    {name: \"Nauru\", \"code\": \"NR\"}, \r\n    {name: \"Nepal\", \"code\": \"NP\"}, \r\n    {name: \"Netherlands\", \"code\": \"NL\"}, \r\n    {name: \"Netherlands Antilles\", \"code\": \"AN\"}, \r\n    {name: \"New Caledonia\", \"code\": \"NC\"}, \r\n    {name: \"New Zealand\", \"code\": \"NZ\"}, \r\n    {name: \"Nicaragua\", \"code\": \"NI\"}, \r\n    {name: \"Niger\", \"code\": \"NE\"}, \r\n    {name: \"Nigeria\", \"code\": \"NG\"}, \r\n    {name: \"Niue\", \"code\": \"NU\"}, \r\n    {name: \"Norfolk Island\", \"code\": \"NF\"}, \r\n    {name: \"Northern Mariana Islands\", \"code\": \"MP\"}, \r\n    {name: \"Norway\", \"code\": \"NO\"}, \r\n    {name: \"Oman\", \"code\": \"OM\"}, \r\n    {name: \"Pakistan\", \"code\": \"PK\"}, \r\n    {name: \"Palau\", \"code\": \"PW\"}, \r\n    {name: \"Palestinian Territory, Occupied\", \"code\": \"PS\"}, \r\n    {name: \"Panama\", \"code\": \"PA\"}, \r\n    {name: \"Papua New Guinea\", \"code\": \"PG\"}, \r\n    {name: \"Paraguay\", \"code\": \"PY\"}, \r\n    {name: \"Peru\", \"code\": \"PE\"}, \r\n    {name: \"Philippines\", \"code\": \"PH\"}, \r\n    {name: \"Pitcairn\", \"code\": \"PN\"}, \r\n    {name: \"Poland\", \"code\": \"PL\"}, \r\n    {name: \"Portugal\", \"code\": \"PT\"}, \r\n    {name: \"Puerto Rico\", \"code\": \"PR\"}, \r\n    {name: \"Qatar\", \"code\": \"QA\"}, \r\n    {name: \"Reunion\", \"code\": \"RE\"}, \r\n    {name: \"Romania\", \"code\": \"RO\"}, \r\n    {name: \"Russian Federation\", \"code\": \"RU\"}, \r\n    {name: \"RWANDA\", \"code\": \"RW\"}, \r\n    {name: \"Saint Helena\", \"code\": \"SH\"}, \r\n    {name: \"Saint Kitts and Nevis\", \"code\": \"KN\"}, \r\n    {name: \"Saint Lucia\", \"code\": \"LC\"}, \r\n    {name: \"Saint Pierre and Miquelon\", \"code\": \"PM\"}, \r\n    {name: \"Saint Vincent and the Grenadines\", \"code\": \"VC\"}, \r\n    {name: \"Samoa\", \"code\": \"WS\"}, \r\n    {name: \"San Marino\", \"code\": \"SM\"}, \r\n    {name: \"Sao Tome and Principe\", \"code\": \"ST\"}, \r\n    {name: \"Saudi Arabia\", \"code\": \"SA\"}, \r\n    {name: \"Senegal\", \"code\": \"SN\"}, \r\n    {name: \"Serbia\", \"code\": \"RS\"}, \r\n    {name: \"Seychelles\", \"code\": \"SC\"}, \r\n    {name: \"Sierra Leone\", \"code\": \"SL\"}, \r\n    {name: \"Singapore\", \"code\": \"SG\"}, \r\n    {name: \"Slovakia\", \"code\": \"SK\"}, \r\n    {name: \"Slovenia\", \"code\": \"SI\"}, \r\n    {name: \"Solomon Islands\", \"code\": \"SB\"}, \r\n    {name: \"Somalia\", \"code\": \"SO\"}, \r\n    {name: \"South Africa\", \"code\": \"ZA\"}, \r\n    {name: \"South Georgia and the South Sandwich Islands\", \"code\": \"GS\"}, \r\n    {name: \"Spain\", \"code\": \"ES\"}, \r\n    {name: \"Sri Lanka\", \"code\": \"LK\"}, \r\n    {name: \"Sudan\", \"code\": \"SD\"}, \r\n    {name: \"Suriname\", \"code\": \"SR\"}, \r\n    {name: \"Svalbard and Jan Mayen\", \"code\": \"SJ\"}, \r\n    {name: \"Swaziland\", \"code\": \"SZ\"}, \r\n    {name: \"Sweden\", \"code\": \"SE\"}, \r\n    {name: \"Switzerland\", \"code\": \"CH\"}, \r\n    {name: \"Syrian Arab Republic\", \"code\": \"SY\"}, \r\n    {name: \"Taiwan, Province of China\", \"code\": \"TW\"}, \r\n    {name: \"Tajikistan\", \"code\": \"TJ\"}, \r\n    {name: \"Tanzania, United Republic of\", \"code\": \"TZ\"}, \r\n    {name: \"Thailand\", \"code\": \"TH\"}, \r\n    {name: \"Timor-Leste\", \"code\": \"TL\"}, \r\n    {name: \"Togo\", \"code\": \"TG\"}, \r\n    {name: \"Tokelau\", \"code\": \"TK\"}, \r\n    {name: \"Tonga\", \"code\": \"TO\"}, \r\n    {name: \"Trinidad and Tobago\", \"code\": \"TT\"}, \r\n    {name: \"Tunisia\", \"code\": \"TN\"}, \r\n    {name: \"Turkey\", \"code\": \"TR\"}, \r\n    {name: \"Turkmenistan\", \"code\": \"TM\"}, \r\n    {name: \"Turks and Caicos Islands\", \"code\": \"TC\"}, \r\n    {name: \"Tuvalu\", \"code\": \"TV\"}, \r\n    {name: \"Uganda\", \"code\": \"UG\"}, \r\n    {name: \"Ukraine\", \"code\": \"UA\"}, \r\n    {name: \"United Arab Emirates\", \"code\": \"AE\"}, \r\n    {name: \"United Kingdom\", \"code\": \"GB\"}, \r\n    {name: \"United States\", \"code\": \"US\"}, \r\n    {name: \"United States Minor Outlying Islands\", \"code\": \"UM\"}, \r\n    {name: \"Uruguay\", \"code\": \"UY\"}, \r\n    {name: \"Uzbekistan\", \"code\": \"UZ\"}, \r\n    {name: \"Vanuatu\", \"code\": \"VU\"}, \r\n    {name: \"Venezuela\", \"code\": \"VE\"}, \r\n    {name: \"Viet Nam\", \"code\": \"VN\"}, \r\n    {name: \"Virgin Islands, British\", \"code\": \"VG\"}, \r\n    {name: \"Virgin Islands, U.S.\", \"code\": \"VI\"}, \r\n    {name: \"Wallis and Futuna\", \"code\": \"WF\"}, \r\n    {name: \"Western Sahara\", \"code\": \"EH\"}, \r\n    {name: \"Yemen\", \"code\": \"YE\"}, \r\n    {name: \"Zambia\", \"code\": \"ZM\"}, \r\n    {name: \"Zimbabwe\", \"code\": \"ZW\"} \r\n    ]","import React, { useEffect, useState } from 'react'\r\nimport { countryNames } from './country'\r\nimport BootstrapTable from 'react-bootstrap-table-next'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.css'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator'\r\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css'\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter'\r\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css'\r\n\r\nconst getLocalItems = () => {\r\n    let list = localStorage.getItem('lists')\r\n    if (list) {\r\n        return JSON.parse(localStorage.getItem('lists'))\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\n\r\n\r\nconst Register = () => {\r\n\r\n    const [userInput, setUserInput] = useState({\r\n        email: '',\r\n        password: '',\r\n        retype_password: '',\r\n        Firstname: '',\r\n        LastName: '',\r\n        phonenumber: '',\r\n        Address: '',\r\n        Town: '',\r\n        Region: '',\r\n        ZipCode: '',\r\n        country: null\r\n    })\r\n\r\n\r\n\r\n    const [records, setRecords] = useState(getLocalItems())\r\n    const handleInputChange = (e) => {\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n        setUserInput({ ...userInput, [name]: value })\r\n    }\r\n    const handleInputSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newRecord = { ...userInput, id: new Date().getTime().toString() }\r\n        setRecords([...records, newRecord])\r\n\r\n    }\r\n    console.log(records)\r\n    const columns = [\r\n        { dataField: 'Firstname', text: 'FirstName', sort: true, filter: textFilter() },\r\n        { dataField: 'email', text: 'Email', sort: true, filter: textFilter() },\r\n        { dataField: 'phonenumber', text: 'Phone-Number', sort: true, filter: textFilter() },\r\n        { dataField: 'Country', text: 'Country', sort: true, filter: textFilter() }\r\n    ]\r\n    useEffect(() => {\r\n        localStorage.setItem('lists', JSON.stringify(records))\r\n\r\n    }, [records])\r\n    const pagination = paginationFactory({\r\n        page: 1,\r\n        sizePerPage: 10,\r\n        lastPageText: \">>\",\r\n        firstPageText: \"<<\",\r\n        nextPageText: \">\",\r\n        prePageText: \"<\",\r\n        showTotal: true,\r\n        alwaysShowAllBtns: true,\r\n        onPageChange: function (page, sizePerPage) {\r\n            console.log('page', page);\r\n            console.log('sizePerPage', sizePerPage);\r\n        },\r\n        onSizePerPageChange: function (page, sizePerPage) {\r\n            console.log('page', page);\r\n            console.log('sizePerPage', sizePerPage);\r\n        }\r\n    })\r\n    return (\r\n        <div >\r\n            <div className='user_form'>\r\n                <form onSubmit={handleInputSubmit} action=''>\r\n                    <tr>\r\n                        <th><label>email:</label></th>\r\n                        <th> <input type='email' name='email' required='required'\r\n                            value={userInput.email} id='name' onChange={handleInputChange}\r\n                        /> </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th> <label>password:</label></th>\r\n                        <th><input type='password' name='password' required='required'\r\n                            value={userInput.password} id='password' onChange={handleInputChange} />\r\n                            </th>\r\n                    </tr>\r\n                    <tr>\r\n\r\n                        <th> <label>Retype-password:</label></th>\r\n                        <th><input type='password' name='retype_password' required='required'\r\n                            value={userInput.retype_password} id='retype_password' onChange={handleInputChange} />\r\n                        </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th><label>Firstname:</label></th>\r\n                        <th>\r\n                            <input type='text' name='Firstname' required='required'\r\n                                value={userInput.Firstname} id='Firstname' onChange={handleInputChange} />\r\n                            </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th><label>LastName:</label></th>\r\n                        <th><input type='text' name='LastName' required='required'\r\n                            value={userInput.LastName} id='LastName' onChange={handleInputChange} />\r\n                        </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th><label>phonenumber:</label></th>\r\n                        <th> <input type='number' name='phonenumber' required='required'\r\n                            value={userInput.phonenumber} id='phonenumber' onChange={handleInputChange} /></th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>  <label>Address:</label></th>\r\n                        <th><input type='text' name='Address' required='required'\r\n                            value={userInput.Address} id='Address' onChange={handleInputChange} />\r\n                            </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th> <label>Town:</label></th>\r\n                        <th>\r\n                            <input type='text' name='Town' required='required'\r\n                                value={userInput.Town} id='Town' onChange={handleInputChange} />\r\n                            </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th> <label>Region:</label></th>\r\n                        <th><input type='text' name='Region' required='required'\r\n                            value={userInput.Region} id='Region' onChange={handleInputChange} />\r\n                            </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th> <label>Zipcode:</label>\r\n                        </th>\r\n                        <th><input type='text' name='ZipCode' required='required'\r\n                            value={userInput.ZipCode} id='ZipCode' onChange={handleInputChange} />\r\n                            </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>\r\n                            <b>Country</b></th>\r\n                        <th><select name=\"Country\" required='required' id='Country' onChange={handleInputChange}>\r\n                            <option>---slect country----</option>\r\n                            {\r\n                                countryNames.map((user) => (\r\n                                    <option>{user.name}</option>\r\n                                ))\r\n                            }\r\n                        </select></th>\r\n                    </tr>\r\n                    <input type='submit' required='required' />\r\n                </form>\r\n            </div>\r\n\r\n            <div>\r\n            \r\n                <BootstrapTable\r\n                    bootstrap4\r\n                    keyField='id'\r\n                    columns={columns}\r\n                    data={records}\r\n                    pagination={pagination}\r\n                    filter={filterFactory()}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Register\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Register from './Components/Register';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n      <Register />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}